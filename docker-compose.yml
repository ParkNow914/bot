services:
  gateway:
    build: ./gateway
    ports:
      - "8080:80"
    depends_on:
      - trading
      - dropshipping
      - afiliados
      - arbitragem
      - conteudo
    networks:
      - superbot-net
    environment:
      - GATEWAY_SECRET=${GATEWAY_SECRET}

  trading:
    build: ./trading
    environment:
      - DB_URL=${DB_URL}
      - REDIS_URL=${REDIS_URL}
    networks:
      - superbot-net
    volumes:
      - trading-logs:/app/logs

  dropshipping:
    build: ./dropshipping
    networks:
      - superbot-net
    volumes:
      - dropshipping-logs:/app/logs

  afiliados:
    build: ./afiliados
    networks:
      - superbot-net
    volumes:
      - afiliados-logs:/app/logs

  arbitragem:
    build: ./arbitragem
    networks:
      - superbot-net
    volumes:
      - arbitragem-logs:/app/logs

  conteudo:
    build: ./conteudo
    networks:
      - superbot-net
    volumes:
      - conteudo-logs:/app/logs

  airflow:
    build: ./airflow
    depends_on:
      - trading
      - dropshipping
      - afiliados
      - arbitragem
      - conteudo
    networks:
      - superbot-net

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - superbot-net

  redis:
    image: redis:alpine
    networks:
      - superbot-net
    # Se desejar persistência, descomente a linha abaixo
    # volumes:
    #   - redis-data:/data

  loki:
    image: grafana/loki:2.9.0
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./monitoring/loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki
    networks:
      - superbot-net

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - superbot-net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - superbot-net

  alertmanager:
    image: prom/alertmanager:latest
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    networks:
      - superbot-net

volumes:
  grafana-storage:
  postgres-data:
  prometheus-data:
  loki-data:
  trading-logs:
  dropshipping-logs:
  afiliados-logs:
  arbitragem-logs:
  conteudo-logs:
  # redis-data: # descomente se desejar persistência para o Redis

networks:
  superbot-net:
    driver: bridge